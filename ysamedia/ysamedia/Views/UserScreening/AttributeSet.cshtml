@model ysamedia.Models.UserScreeningViewModels.AttributeSetViewModel

@{
        ViewData["Title"] = "User Attributes";
        Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <div class="card-box">
            @*<h2 class="m-t-0 header-title">@ViewData["Title"]</h2>*@            
            <hr />
            <div class="row">
                <div class="col-12">
                    <div class="p-20">
                        <form asp-route-returnUrl="@ViewData["ReturnUrl"]" class="form-horizontal" method="post" id="my-form">
                            <div asp-validation-summary="All" class="text-danger"></div>
                            <div class="form-group row">
                                <label class="col-12 col-form-label"><b>Please select the top ten most applicable to you</b></label>
                            </div>
                            <div class="form-group row">
                                <p class="col-12 col-form-label">Select From List</p>
                                <div class="col-12">
                                    <div class="with-select">
                                        <select asp-for="PosAttribute"
                                                class="chosen-select"
                                                asp-items="@(new MultiSelectList(ViewBag.ListPosAttri, "AttributeId", "AttributeName"))" multiple="multiple"></select>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-12 col-form-label"><b>Please select the top ten most applicable to you</b></label>
                            </div>
                            <div class="form-group row">
                                <p class="col-12 col-form-label">Select From List</p>
                                <div class="col-12">
                                    <div class="with-select">
                                        <select asp-for="NegAttribute"
                                                class="chosen-select" required
                                                asp-items="@(new MultiSelectList(ViewBag.ListNegAttri, "AttributeId", "Attribute"))" multiple="multiple"></select>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <br />
                            <button class="btn btn-block btn-custom waves-effect waves-light" type="submit" id="validateIt">Submit Form</button>                            
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<link href="~/lib/chosen/chosen.css" rel="stylesheet" />
@section scripts {

    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script src="~/lib/chosen/chosen.jquery.js"></script>
    <script src="~/lib/chosen/chosen.proto.js"></script>

    <script>
        // Chosen validation
        $('.chosen-select').chosen({
            no_results_text: "Oops, Nothing Found!",
            placeholder_text_multiple: "Select 10 Personal Attributes",
            width: "100%"
        });
        $.validator.setDefaults({ ignore: ":hidden:not(select)" });

        // validation of chosen on change
        if ($("select.chosen-select").length > 0) {
            $("select.chosen-select").each(function () {
                if ($(this).attr('required') !== undefined) {
                    $(this).on("change", function () {
                        $(this).valid();
                    });
                }
            });
        }

        // validation
        $('#my-form').validate({
            errorPlacement: function (error, element) {
                console.log("placement");
                if (element.is("select.chosen-select")) {
                    console.log("placement for chosen");
                    // placement for chosen
                    element.next("div.chzn-container").append(error);
                } else {
                    // standard placement
                    error.insertAfter(element);
                }
            }
        });

    </script>
    }